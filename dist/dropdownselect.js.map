{"version":3,"sources":["webpack://DropdownSelect/./src/js/dropdownselect.js","webpack://DropdownSelect/webpack/bootstrap","webpack://DropdownSelect/webpack/startup","webpack://DropdownSelect/webpack/runtime/define property getters","webpack://DropdownSelect/webpack/runtime/hasOwnProperty shorthand"],"names":["selector","config","HTMLElement","this","$el","document","querySelector","Error","_state","options","totalOptions","on","selectedOption","isRendered","_render","undefined","option","add","setValue","value","_bindCoreEvents","_update","elements","NodeList","querySelectorAll","i","length","_option","Object","assign","_normalizeOption","push","_renderItem","name","id","items","silent","getOptionByValue","_setValueByOption","getSelectedOption","getOptions","subOption","$container","classList","remove","contains","isOpened","close","open","$node","_haveEvent","change","call","_isReady","$input","_setButtonText","createElement","$button","$arrow","$buttonContainer","appendChild","$dropdownContainer","$dropdown","setAttribute","getAttribute","parentElement","replaceChild","children","HTMLOptGroupElement","addOptgroup","label","_$convertNodeListToOptionDataItems","_$convertNodeToOptionDataItem","addEventListener","e","preventDefault","toggle","target","code","innerHTML","$nodeList","result","text","append","_renderOption","_renderOptionGroup","optionGroup","$groupName","item","$optionNode","_bindOptionEvents","event","_normalizeValue","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty"],"mappings":"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","file":"dropdownselect.js","sourcesContent":["\"use strict\";\r\n\r\nexport default class {\r\n    constructor(selector, config = {}) {\r\n        if (selector instanceof HTMLElement) {\r\n            this.$el = selector;\r\n        } else {\r\n            this.$el = document.querySelector(selector);\r\n        }\r\n        if (this.$el === null) {\r\n            throw new Error(`${selector} not found!`);\r\n        }\r\n        this._state = {\r\n            /**\r\n             * Structure:\r\n             * [\r\n             *      {\r\n             *          id: Number,\r\n             *          name: String\r\n             *      },\r\n             *      {\r\n             *          id: Number,\r\n             *          name: String,\r\n             *          items: [{\r\n             *              id: Number,\r\n             *              name: String\r\n             *          }]\r\n             *      }\r\n             *\r\n             * ]\r\n             */\r\n            options: [],\r\n            totalOptions: 0,\r\n            on: config.on || {},\r\n            selectedOption: null,\r\n            isRendered: false\r\n        };\r\n\r\n        this._render();\r\n        if (config.options !== undefined) {\r\n            for (const option of config.options) {\r\n                this.add(option);\r\n            }\r\n        }\r\n        this.setValue(config.value || this.$el.value, true);\r\n        this._bindCoreEvents();\r\n        this._update();\r\n    }\r\n\r\n    static fromElements(elements) {\r\n        if (elements instanceof NodeList === false) {\r\n            elements = document.querySelectorAll(elements);\r\n        }\r\n        for (let i = 0; i < elements.length; i++) {\r\n            new this(elements[i])\r\n        }\r\n    }\r\n\r\n    /**\r\n     * select.add({\r\n     *     id: 1,\r\n     *     name: 'Text'\r\n     * });\r\n     * @param option\r\n     */\r\n    add(option) {\r\n        const _option = Object.assign(option);\r\n        this._normalizeOption(_option);\r\n        this._state.options.push(_option);\r\n        this._renderItem(_option);\r\n        this._update();\r\n\r\n        this._state.totalOptions++;\r\n        return this;\r\n    }\r\n\r\n    addOptgroup(name, options = []) {\r\n        this.add({\r\n            id: 0,\r\n            name: name,\r\n            items: options\r\n        });\r\n    }\r\n\r\n    setValue(value, silent = false) {\r\n        const option = this.getOptionByValue(value);\r\n        if (option === null) {\r\n            return false;\r\n        }\r\n        return this._setValueByOption(option, silent);\r\n    }\r\n\r\n    getValue() {\r\n        let option = this.getSelectedOption();\r\n        if (option === null) {\r\n            return null;\r\n        }\r\n        return option.id;\r\n    }\r\n\r\n    getOptionByValue(value) {\r\n        for (let option of this.getOptions()) {\r\n            if (option.id === value) {\r\n                return option;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getOptions() {\r\n        const options = [];\r\n        for (const option of this._state.options) {\r\n            if (option.items === undefined) {\r\n                options.push(option);\r\n            } else {\r\n                for (const subOption of option.items) {\r\n                    options.push(subOption)\r\n                }\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getSelectedOption() {\r\n        return this._state.selectedOption;\r\n    }\r\n\r\n    open() {\r\n        this.$container.classList.add('dropdownselect--opened');\r\n    }\r\n\r\n    close() {\r\n        this.$container.classList.remove('dropdownselect--opened');\r\n    }\r\n\r\n    isOpened() {\r\n        return this.$container.classList.contains('dropdownselect--opened');\r\n    }\r\n\r\n    toggle() {\r\n        if (this.isOpened()) {\r\n            this.close();\r\n        } else {\r\n            this.open();\r\n        }\r\n    }\r\n\r\n    length() {\r\n        return this._state.totalOptions;\r\n    }\r\n\r\n    _setValueByOption(option, silent = false) {\r\n        for (let _option of this.getOptions()) {\r\n            _option.$node.classList.remove('active');\r\n        }\r\n        this._state.selectedOption = option;\r\n        option.$node.classList.add('active');\r\n\r\n        if (silent === false && this._haveEvent('change')) {\r\n            this._state.on.change.call(this, option.id, option, this);\r\n        }\r\n        this._update();\r\n    }\r\n\r\n    _isReady() {\r\n        return this._state.isRendered;\r\n    }\r\n\r\n    _update() {\r\n        if (this._isReady() === false) {\r\n            return;\r\n        }\r\n        let selectedOption = this.getSelectedOption();\r\n        if (selectedOption !== null) {\r\n            this.$input.value = selectedOption.id;\r\n            this._setButtonText(selectedOption.name);\r\n        } else {\r\n            this._setButtonText('');\r\n        }\r\n    }\r\n\r\n    _render() {\r\n        // init container\r\n        this.$container = document.createElement('div');\r\n        this.$container.classList.add('dropdownselect');\r\n\r\n        // init button\r\n        this.$button = document.createElement('button');\r\n        this.$button.classList.add('dropdownselect__button');\r\n\r\n        this.$arrow = document.createElement('div');\r\n        this.$arrow.classList.add('dropdownselect__arrow');\r\n\r\n        this.$buttonContainer = document.createElement('div');\r\n        this.$buttonContainer.classList.add('dropdownselect__button-container');\r\n        this.$buttonContainer.appendChild(this.$button);\r\n        this.$buttonContainer.appendChild(this.$arrow);\r\n\r\n\r\n        // init dropdown\r\n        this.$dropdownContainer = document.createElement('div');\r\n        this.$dropdownContainer.classList.add('dropdownselect__dropdown');\r\n        this.$dropdown = document.createElement('ul');\r\n        this.$dropdownContainer.appendChild(this.$dropdown);\r\n\r\n        // init hidden select\r\n        this.$input = document.createElement('input');\r\n        this.$input.setAttribute('type', 'hidden');\r\n        if (this.$el.getAttribute('name') !== null) {\r\n            this.$input.setAttribute('name', this.$el.getAttribute('name'));\r\n        }\r\n        this.$container.appendChild(this.$input);\r\n        this.$container.appendChild(this.$buttonContainer);\r\n        this.$container.appendChild(this.$dropdownContainer);\r\n\r\n        this.$el.parentElement.replaceChild(this.$container, this.$el);\r\n\r\n        for (let i = 0; i < this.$el.children.length; i++) {\r\n            const $node = this.$el.children[i];\r\n            if ($node instanceof HTMLOptGroupElement) {\r\n                this.addOptgroup($node.label, this._$convertNodeListToOptionDataItems($node.children));\r\n            } else {\r\n                this.add(this._$convertNodeToOptionDataItem($node));\r\n            }\r\n        }\r\n\r\n        this._state.isRendered = true;\r\n    }\r\n\r\n    _bindCoreEvents() {\r\n        this.$button.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n            this.toggle();\r\n        });\r\n        document.addEventListener('click', (e) => {\r\n            if (this.isOpened() === false) {\r\n                return false;\r\n            }\r\n            if (this.$container.contains(e.target) === false) {\r\n                this.close();\r\n            }\r\n        });\r\n        this.$container.addEventListener('keydown', (e) => {\r\n            if (e.code === 'Escape') {\r\n                this.close();\r\n            }\r\n        })\r\n    }\r\n\r\n    _$convertNodeToOptionDataItem($node) {\r\n        return {\r\n            id: $node.value,\r\n            name: $node.innerHTML\r\n        };\r\n    }\r\n\r\n    _$convertNodeListToOptionDataItems($nodeList) {\r\n        const result = [];\r\n        for (let i = 0; i < $nodeList.length; i++) {\r\n            result.push(this._$convertNodeToOptionDataItem($nodeList[i]));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    _setButtonText(text) {\r\n        this.$button.innerHTML = text;\r\n    }\r\n\r\n    _renderItem(option) {\r\n        if (option.items === undefined) {\r\n            this.$dropdown.append(this._renderOption(option));\r\n        } else {\r\n            this.$dropdown.append(this._renderOptionGroup(option));\r\n        }\r\n    }\r\n\r\n    _renderOptionGroup(optionGroup) {\r\n        const $node = document.createElement('li');\r\n        $node.classList.add('dropdownselect-optiongroup');\r\n        const $groupName = document.createElement('span');\r\n        $groupName.innerHTML = optionGroup.name;\r\n        const $container = document.createElement('ul');\r\n        for (const item of optionGroup.items) {\r\n            $container.append(this._renderOption(item));\r\n        }\r\n        $node.appendChild($groupName);\r\n        $node.appendChild($container);\r\n        return $node;\r\n    }\r\n\r\n    _renderOption(option) {\r\n        const $node = document.createElement('li');\r\n        $node.classList.add('dropdownselect-option')\r\n        const $optionNode = document.createElement('span');\r\n        $optionNode.innerHTML = option.name;\r\n        $node.appendChild($optionNode);\r\n        option.$node = $node;\r\n        this._bindOptionEvents(option);\r\n        return $node;\r\n    }\r\n\r\n    _haveEvent(event) {\r\n        return typeof this._state.on[event] === 'function';\r\n    }\r\n\r\n    _bindOptionEvents(option) {\r\n        option.$node.addEventListener('click', () => {\r\n            this.close();\r\n            this._setValueByOption(option);\r\n        });\r\n    }\r\n\r\n    _normalizeValue(value) {\r\n        return value + '';\r\n    }\r\n\r\n    _normalizeOption(option) {\r\n        option.id = this._normalizeValue(option.id);\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\n__webpack_require__(780);\nreturn __webpack_require__(890);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}