{"version":3,"sources":["webpack://DropdownSelect/./src/js/dropdownselect.js","webpack://DropdownSelect/webpack/bootstrap","webpack://DropdownSelect/webpack/startup","webpack://DropdownSelect/webpack/runtime/define property getters","webpack://DropdownSelect/webpack/runtime/hasOwnProperty shorthand"],"names":["selector","config","HTMLElement","this","$el","document","querySelector","Error","_state","data","on","selectedOption","isRendered","_render","setValue","value","_bindCoreEvents","_update","elements","NodeList","querySelectorAll","i","length","option","_option","Object","assign","push","_renderItem","name","options","add","id","items","getOptionByValue","_setValueByOption","getSelectedOption","getOptions","undefined","subOption","$container","classList","remove","contains","isOpened","close","open","$node","_haveEvent","change","call","_isReady","$input","_setButtonText","createElement","$button","$arrow","$buttonContainer","appendChild","$dropdownContainer","$dropdown","setAttribute","getAttribute","parentElement","replaceChild","children","HTMLOptGroupElement","addOptgroup","label","_$convertNodeListToOptionDataItems","_$convertNodeToOptionDataItem","addEventListener","e","preventDefault","toggle","target","code","innerHTML","$nodeList","result","text","append","_renderOption","_renderOptionGroup","optionGroup","$groupName","item","$optionNode","_bindOptionEvents","event","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty"],"mappings":"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","file":"dropdownselect.js","sourcesContent":["\"use strict\";\r\n\r\nexport default class {\r\n    constructor(selector, config = {}) {\r\n        if (selector instanceof HTMLElement) {\r\n            this.$el = selector;\r\n        } else {\r\n            this.$el = document.querySelector(selector);\r\n        }\r\n        if (this.$el === null) {\r\n            throw new Error(`${selector} not found!`);\r\n        }\r\n        this._state = {\r\n            /**\r\n             * Structure:\r\n             * [\r\n             *      {\r\n             *          id: Number,\r\n             *          name: String\r\n             *      },\r\n             *      {\r\n             *          id: Number,\r\n             *          name: String,\r\n             *          items: [{\r\n             *              id: Number,\r\n             *              name: String\r\n             *          }]\r\n             *      }\r\n             *\r\n             * ]\r\n             */\r\n            data: [],\r\n            on: config.on || {},\r\n            selectedOption: null,\r\n            isRendered: false\r\n        };\r\n\r\n        this._render();\r\n        this.setValue(config.value || this.$el.value);\r\n        this._bindCoreEvents();\r\n        this._update();\r\n    }\r\n\r\n    static fromElements(elements) {\r\n        if (elements instanceof NodeList === false) {\r\n            elements = document.querySelectorAll(elements);\r\n        }\r\n        for (let i = 0; i < elements.length; i++) {\r\n            new this(elements[i])\r\n        }\r\n    }\r\n\r\n    /**\r\n     * select.add({\r\n     *     id: 1,\r\n     *     name: 'Text'\r\n     * });\r\n     * @param option\r\n     */\r\n    add(option) {\r\n        const _option = Object.assign(option);\r\n        this._state.data.push(_option);\r\n        this._renderItem(_option);\r\n\r\n        this._update();\r\n        return this;\r\n    }\r\n\r\n    addOptgroup(name, options = []) {\r\n        this.add({\r\n            id: 0,\r\n            name: name,\r\n            items: options\r\n        });\r\n    }\r\n\r\n    setValue(value) {\r\n        let option = this.getOptionByValue(value);\r\n        return this._setValueByOption(option);\r\n    }\r\n\r\n    getValue() {\r\n        let option = this.getSelectedOption();\r\n        if (option === null) {\r\n            return null;\r\n        }\r\n        return option.id;\r\n    }\r\n\r\n    getOptionByValue(value) {\r\n        for (let option of this.getOptions()) {\r\n            if (option.id === value) {\r\n                return option;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getOptions() {\r\n        const options = [];\r\n        for (const option of this._state.data) {\r\n            if (option.items === undefined) {\r\n                options.push(option);\r\n            } else {\r\n                for (const subOption of option.items) {\r\n                    options.push(subOption)\r\n                }\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getSelectedOption() {\r\n        return this._state.selectedOption;\r\n    }\r\n\r\n    open() {\r\n        this.$container.classList.add('dropdownselect--opened');\r\n    }\r\n\r\n    close() {\r\n        this.$container.classList.remove('dropdownselect--opened');\r\n    }\r\n\r\n    isOpened() {\r\n        return this.$container.classList.contains('dropdownselect--opened');\r\n    }\r\n\r\n    toggle() {\r\n        if (this.isOpened()) {\r\n            this.close();\r\n        } else {\r\n            this.open();\r\n        }\r\n    }\r\n\r\n    _setValueByOption(option) {\r\n        for (let _option of this.getOptions()) {\r\n            _option.$node.classList.remove('active');\r\n        }\r\n        this._state.selectedOption = option;\r\n        option.$node.classList.add('active');\r\n\r\n        if (this._haveEvent('change')) {\r\n            this._state.on.change.call(this, option.id, option, this);\r\n        }\r\n        this._update();\r\n    }\r\n\r\n    _isReady() {\r\n        return this._state.isRendered;\r\n    }\r\n\r\n    _update() {\r\n        if (this._isReady() === false) {\r\n            return;\r\n        }\r\n        let selectedOption = this.getSelectedOption();\r\n        if (selectedOption !== null) {\r\n            this.$input.value = selectedOption.id;\r\n            this._setButtonText(selectedOption.name);\r\n        } else {\r\n            this._setButtonText('');\r\n        }\r\n    }\r\n\r\n    _render() {\r\n        // init container\r\n        this.$container = document.createElement('div');\r\n        this.$container.classList.add('dropdownselect');\r\n\r\n        // init button\r\n        this.$button = document.createElement('button');\r\n        this.$button.classList.add('dropdownselect__button');\r\n\r\n        this.$arrow = document.createElement('div');\r\n        this.$arrow.classList.add('dropdownselect__arrow');\r\n\r\n        this.$buttonContainer = document.createElement('div');\r\n        this.$buttonContainer.classList.add('dropdownselect__button-container');\r\n        this.$buttonContainer.appendChild(this.$button);\r\n        this.$buttonContainer.appendChild(this.$arrow);\r\n\r\n\r\n        // init dropdown\r\n        this.$dropdownContainer = document.createElement('div');\r\n        this.$dropdownContainer.classList.add('dropdownselect__dropdown');\r\n        this.$dropdown = document.createElement('ul');\r\n        this.$dropdownContainer.appendChild(this.$dropdown);\r\n\r\n        // init hidden select\r\n        this.$input = document.createElement('input');\r\n        this.$input.setAttribute('type', 'hidden');\r\n        if (this.$el.getAttribute('name') !== null) {\r\n            this.$input.setAttribute('name', this.$el.getAttribute('name'));\r\n        }\r\n        this.$container.appendChild(this.$input);\r\n        this.$container.appendChild(this.$buttonContainer);\r\n        this.$container.appendChild(this.$dropdownContainer);\r\n\r\n        this.$el.parentElement.replaceChild(this.$container, this.$el);\r\n\r\n        for (let i = 0; i < this.$el.children.length; i++) {\r\n            const $node = this.$el.children[i];\r\n            if ($node instanceof HTMLOptGroupElement) {\r\n                this.addOptgroup($node.label, this._$convertNodeListToOptionDataItems($node.children));\r\n            } else {\r\n                this.add(this._$convertNodeToOptionDataItem($node));\r\n            }\r\n        }\r\n\r\n        this._state.isRendered = true;\r\n    }\r\n\r\n    _bindCoreEvents() {\r\n        this.$button.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n            this.toggle();\r\n        });\r\n        document.addEventListener('click', (e) => {\r\n            if (this.isOpened() === false) {\r\n                return false;\r\n            }\r\n            if (this.$container.contains(e.target) === false) {\r\n                this.close();\r\n            }\r\n        });\r\n        this.$container.addEventListener('keydown', (e) => {\r\n            if (e.code === 'Escape') {\r\n                this.close();\r\n            }\r\n        })\r\n    }\r\n\r\n    _$convertNodeToOptionDataItem($node) {\r\n        return {\r\n            id: $node.value,\r\n            name: $node.innerHTML\r\n        };\r\n    }\r\n\r\n    _$convertNodeListToOptionDataItems($nodeList) {\r\n        const result = [];\r\n        for (let i = 0; i < $nodeList.length; i++) {\r\n            result.push(this._$convertNodeToOptionDataItem($nodeList[i]));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    _setButtonText(text) {\r\n        this.$button.innerHTML = text;\r\n    }\r\n\r\n    _renderItem(option) {\r\n        if (option.items === undefined) {\r\n            this.$dropdown.append(this._renderOption(option));\r\n        } else {\r\n            this.$dropdown.append(this._renderOptionGroup(option));\r\n        }\r\n    }\r\n\r\n    _renderOptionGroup(optionGroup) {\r\n        const $node = document.createElement('li');\r\n        $node.classList.add('dropdownselect-optiongroup');\r\n        const $groupName = document.createElement('span');\r\n        $groupName.innerHTML = optionGroup.name;\r\n        const $container = document.createElement('ul');\r\n        for (const item of optionGroup.items) {\r\n            $container.append(this._renderOption(item));\r\n        }\r\n        $node.appendChild($groupName);\r\n        $node.appendChild($container);\r\n        return $node;\r\n    }\r\n\r\n    _renderOption(option) {\r\n        const $node = document.createElement('li');\r\n        $node.classList.add('dropdownselect-option')\r\n        const $optionNode = document.createElement('span');\r\n        $optionNode.innerHTML = option.name;\r\n        $node.appendChild($optionNode);\r\n        option.$node = $node;\r\n        this._bindOptionEvents(option);\r\n        return $node;\r\n    }\r\n\r\n    _haveEvent(event) {\r\n        return typeof this._state.on[event] === 'function';\r\n    }\r\n\r\n    _bindOptionEvents(option) {\r\n        option.$node.addEventListener('click', () => {\r\n            this.close();\r\n            this._setValueByOption(option);\r\n        });\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\n__webpack_require__(780);\nreturn __webpack_require__(890);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}